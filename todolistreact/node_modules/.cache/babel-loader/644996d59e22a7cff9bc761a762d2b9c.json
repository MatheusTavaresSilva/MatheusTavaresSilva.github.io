{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\todo-list-react\\\\todolistreact\\\\src\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport List from '../components/list/list';\nimport Input from '../components/input-element/input';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: 0,\n        status: \"to do\",\n        task: \"123456789123456789123456789\"\n      }, {\n        id: 1,\n        status: \"done\",\n        task: \"task by state\"\n      }],\n      taskSavior: {\n        content: ''\n      }\n    };\n\n    this.toggleStatus = taskIndex => {\n      const tasks = [...this.state.tasks];\n      const task = tasks[taskIndex];\n      task.status === 'to do' ? task.status = 'done' : task.status = 'to do';\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.taskDelete = taskIndex => {\n      const tasks = [...this.state.tasks];\n      tasks.splice(taskIndex, 1);\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.taskSave = () => {\n      //const task = \n      console.log('it\"s working');\n    };\n\n    this.tipeEvent = event => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        EventSave: this.taskSave,\n        value: this.state.taskSavior,\n        onChange: this.tipeEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        tasks: this.state.tasks,\n        EventPositive: this.toggleStatus,\n        EventExclude: this.taskDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mathe/Desktop/todo-list-react/todolistreact/src/app/App.js"],"names":["React","Component","List","Input","App","state","tasks","id","status","task","taskSavior","content","toggleStatus","taskIndex","setState","taskDelete","splice","taskSave","console","log","tipeEvent","event","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACNC,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,MAAM,EAAE,OAAhB;AAAyBC,QAAAA,IAAI,EAAC;AAA9B,OADK,EAEL;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,MAAM,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAC;AAA7B,OAFK,CADD;AAMNC,MAAAA,UAAU,EAAG;AAACC,QAAAA,OAAO,EAAG;AAAX;AANP,KADiB;;AAAA,SAWzBC,YAXyB,GAWTC,SAAD,IAAe;AAC5B,YAAMP,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACA,YAAMG,IAAI,GAAGH,KAAK,CAACO,SAAD,CAAlB;AAEAJ,MAAAA,IAAI,CAACD,MAAL,KAAgB,OAAhB,GAAyBC,IAAI,CAACD,MAAL,GAAc,MAAvC,GAAgDC,IAAI,CAACD,MAAL,GAAc,OAA9D;AAEA,WAAKM,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACA;AAAP,OAAd;AAED,KAnBwB;;AAAA,SAsBzBS,UAtByB,GAsBXF,SAAD,IAAe;AAC1B,YAAMP,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACAA,MAAAA,KAAK,CAACU,MAAN,CAAaH,SAAb,EAAwB,CAAxB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACA;AAAP,OAAd;AACD,KA1BwB;;AAAA,SA6BzBW,QA7ByB,GA6Bd,MAAK;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAhCwB;;AAAA,SAmCzBC,SAnCyB,GAmCZC,KAAD,IAAU,CAErB,CArCwB;AAAA;;AAwCzBC,EAAAA,MAAM,GAAE;AAGN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,SAAS,EAAI,KAAKL,QADpB;AAGE,QAAA,KAAK,EAAI,KAAKZ,KAAL,CAAWK,UAHtB;AAIE,QAAA,QAAQ,EAAI,KAAKU;AAJnB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AACE,QAAA,KAAK,EAAI,KAAKf,KAAL,CAAWC,KADtB;AAEE,QAAA,aAAa,EAAI,KAAKM,YAFxB;AAGE,QAAA,YAAY,EAAI,KAAKG;AAHvB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA3DwB;;AA8D3B,eAAeX,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport List from '../components/list/list';\nimport Input from '../components/input-element/input'\n\nclass App extends Component{\n  state = {\n    tasks: [\n      {id: 0, status: \"to do\", task:\"123456789123456789123456789\"},\n      {id: 1, status: \"done\", task:\"task by state\"},\n    ],\n\n    taskSavior : {content : ''}\n  }\n\n  //função para alterar \n  toggleStatus = (taskIndex) => {\n    const tasks = [...this.state.tasks]\n    const task = tasks[taskIndex]\n    \n    task.status === 'to do'? task.status = 'done' : task.status = 'to do'\n\n    this.setState({tasks:tasks})\n    \n  }\n\n  //função para deletar\n  taskDelete = (taskIndex) => {\n    const tasks = [...this.state.tasks];\n    tasks.splice(taskIndex, 1);\n    this.setState({tasks:tasks})\n  }\n\n  //função para salvar\n  taskSave = () =>{\n    //const task = \n    console.log('it\"s working')\n  }\n\n  //função para digitar\n  tipeEvent = (event) =>{\n    \n  }\n\n  \n  render(){\n    \n\n    return(\n      <div className='App'>\n        <Input\n          EventSave = {this.taskSave}\n          \n          value = {this.state.taskSavior}\n          onChange = {this.tipeEvent}\n\n        />\n        <List\n          tasks = {this.state.tasks}\n          EventPositive = {this.toggleStatus}\n          EventExclude = {this.taskDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}