{"version":3,"sources":["components/button/button.js","components/list/list-element/list.element.js","components/list/list.js","components/input-element/input.js","app/App.js","index.js"],"names":["Button","props","className","wichOne","onClick","Event","children","ListElement","status","EventPositive","EventExclude","List","tasks","map","index","task","id","Input","type","maxLength","value","onChange","event","EventSave","App","state","taskSavior","toggleStatus","taskIndex","setState","taskDelete","splice","taskSave","push","length","tipeEvent","newtest","target","console","log","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAYeA,G,kBATA,SAACC,GAEZ,OACI,wBAAQC,UAAW,UAAYD,EAAME,QAASC,QAASH,EAAMI,MAA7D,SACKJ,EAAMK,a,cC2BJC,EAvBK,SAACN,GACjB,OACI,qBAAIC,UAAW,eAAiBD,EAAMO,OAAtC,UACKP,EAAMK,SAEP,sBAAKJ,UAAY,UAAjB,UAEA,cAAC,EAAD,CAAQC,QAAU,WAAWE,MAASJ,EAAMQ,cAA5C,SAEkB,SAAjBR,EAAMO,OAAkB,cAAC,IAAD,IAAmB,cAAC,IAAD,MAI5C,cAAC,EAAD,CAAQL,QAAU,UAAUE,MAASJ,EAAMS,aAA3C,SAEI,cAAC,IAAD,aCVDC,EAZF,SAACV,GAAD,OAAWA,EAAMW,MAAMC,KAAI,SAACD,EAAOE,GAC5C,OACA,cAAC,EAAD,CACAN,OAAUI,EAAMJ,OAChBC,cAAiB,kBAAMR,EAAMQ,cAAcK,IAC3CJ,aAAgB,kBAAMT,EAAMS,aAAaI,IAHzC,SAKCF,EAAMG,MALaH,EAAMI,QCoBfC,G,MApBD,SAAChB,GAEX,OACI,sBAAKC,UAAY,iBAAjB,UAEI,uBAAOgB,KAAO,OAAOC,UAAY,KAAKjB,UAAY,QAAQkB,MAASnB,EAAMmB,MAAOC,SAAYpB,EAAMoB,WAIlG,qBAAKnB,UAAU,UAAf,SACI,cAAC,EAAD,CACAG,MAAS,SAACiB,GAAD,OAAWrB,EAAMsB,UAAUD,IACpCnB,QAAU,MAFV,SAGI,cAAC,IAAD,aCsDLqB,E,4MAnEbC,MAAQ,CACNb,MAAO,GAIPc,WAAa,I,EAIfC,aAAe,SAACC,GACd,IAAMhB,EAAK,YAAO,EAAKa,MAAMb,OACvBG,EAAOH,EAAMgB,GAEH,UAAhBb,EAAKP,OAAoBO,EAAKP,OAAS,OAASO,EAAKP,OAAS,QAE9D,EAAKqB,SAAS,CAACjB,MAAMA,K,EAKvBkB,WAAa,SAACF,GACZ,IAAMhB,EAAK,YAAO,EAAKa,MAAMb,OAC7BA,EAAMmB,OAAOH,EAAW,GACxB,EAAKC,SAAS,CAACjB,MAAMA,K,EAIvBoB,SAAW,WAET,IAAMpB,EAAK,YAAO,EAAKa,MAAMb,OAE7BA,EAAMqB,KAAK,CAACjB,GAAI,EAAKS,MAAMb,MAAMsB,OAAQ1B,OAAQ,QAASO,KAAM,EAAKU,MAAMC,aAE3E,EAAKG,SAAS,CAACjB,MAAOA,K,EAKxBuB,UAAY,SAACb,GACX,IAAMc,EAAUd,EAAMe,OAAOjB,MAE7B,EAAKS,SAAS,CAACH,WAAaU,K,uDAO5B,OAFAE,QAAQC,MAGN,sBAAKrC,UAAU,MAAf,UACE,cAAC,EAAD,CACEqB,UAAaiB,KAAKR,SAElBZ,MAASoB,KAAKf,MAAMC,WACpBL,SAAYmB,KAAKL,YAGnB,cAAC,EAAD,CACEvB,MAAS4B,KAAKf,MAAMb,MACpBH,cAAiB+B,KAAKb,aACtBjB,aAAgB8B,KAAKV,oB,GA7DbW,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1546509.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.css'\r\n\r\nconst Button = (props) =>{\r\n\r\n    return(\r\n        <button className={'button ' + props.wichOne} onClick={props.Event}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './list.element.css';\r\nimport Button from '../../button/button';\r\n\r\n//Fachek svg\r\nimport { GoCheck } from 'react-icons/go';\r\n//Delete svg\r\nimport { AiFillDelete } from 'react-icons/ai';\r\n//ReloadSVG\r\nimport { AiOutlineReload } from 'react-icons/ai';\r\n\r\nconst ListElement = (props) => {\r\n    return(\r\n        <li className={'listElement ' + props.status}>\r\n            {props.children}\r\n            \r\n            <div className = 'buttons'>\r\n\r\n            <Button wichOne = 'positive' Event = {props.EventPositive}>\r\n\r\n            {props.status === \"done\"?<AiOutlineReload/>:<GoCheck/>}\r\n\r\n            </Button>\r\n\r\n            <Button wichOne = 'exclude' Event = {props.EventExclude}>\r\n\r\n                <AiFillDelete/>\r\n                \r\n            </Button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListElement;","import React from 'react';\r\nimport ListElement from './list-element/list.element'\r\n\r\n\r\nconst List = (props) => props.tasks.map((tasks, index) =>{\r\n    return(\r\n    <ListElement key = {tasks.id}\r\n    status = {tasks.status}\r\n    EventPositive = {() => props.EventPositive(index)}\r\n    EventExclude = {() => props.EventExclude(index)}\r\n    >\r\n    {tasks.task}\r\n    </ListElement>)\r\n    })\r\n\r\n\r\nexport default List;","import React from 'react';\r\nimport './input.css';\r\nimport Button from '../button/button';\r\n\r\nimport { AiFillSave} from 'react-icons/ai'\r\n\r\nconst Input = (props) => {\r\n\r\n    return(\r\n        <div className = \"inputContainer\">\r\n            \r\n            <input type = 'text' maxLength = '27' className = 'input' value = {props.value} onChange = {props.onChange}>\r\n\r\n            </input>\r\n\r\n            <div className='buttons'>\r\n                <Button\r\n                Event = {(event) => props.EventSave(event)}\r\n                wichOne = 'add'>\r\n                    <AiFillSave/>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\nimport './App.css';\nimport List from '../components/list/list';\nimport Input from '../components/input-element/input'\n\nclass App extends Component{\n  state = {\n    tasks: [\n      \n    ],\n\n    taskSavior : ''\n  }\n\n  //função para alterar \n  toggleStatus = (taskIndex) => {\n    const tasks = [...this.state.tasks]\n    const task = tasks[taskIndex]\n    \n    task.status === 'to do'? task.status = 'done' : task.status = 'to do'\n\n    this.setState({tasks:tasks})\n    \n  }\n\n  //função para deletar\n  taskDelete = (taskIndex) => {\n    const tasks = [...this.state.tasks];\n    tasks.splice(taskIndex, 1);\n    this.setState({tasks:tasks})\n  }\n\n  //função para salvar\n  taskSave = () =>{\n    //const task = \n    const tasks = [...this.state.tasks]\n\n    tasks.push({id: this.state.tasks.length, status: 'to do', task: this.state.taskSavior})\n\n    this.setState({tasks: tasks})\n    \n  }\n\n  //função para digitar\n  tipeEvent = (event) =>{\n    const newtest = event.target.value\n\n    this.setState({taskSavior : newtest})\n  }\n\n  \n  render(){\n    console.log()\n\n    return(\n      <div className='App'>\n        <Input\n          EventSave = {this.taskSave}\n          \n          value = {this.state.taskSavior}\n          onChange = {this.tipeEvent}\n\n        />\n        <List\n          tasks = {this.state.tasks}\n          EventPositive = {this.toggleStatus}\n          EventExclude = {this.taskDelete}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}